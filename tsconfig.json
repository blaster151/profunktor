{
  "compilerOptions": {
    "target": "ES2020",
    "module": "ES2020",
    "moduleResolution": "Bundler",
    "declaration": true,
    "outDir": "dist",
    "rootDir": ".",
    "strict": true,
    "noImplicitAny": false,
    "skipLibCheck": true,
    "resolveJsonModule": true,
    "esModuleInterop": true,
    "forceConsistentCasingInFileNames": true
  },
  "include": [
    "index.ts",
    "fp-hkt.ts",
    "fp-typeclasses-hkt.ts",
    "fp-derivation-helpers.ts",
    "fp-adt-builders.ts",
    "fp-maybe-unified.ts",
    "fp-either-unified.ts",
    "fp-result-unified.ts",
    "fp-bimonad-extended.ts",
    "fp-purity.ts",
    "fp-fluent-api.ts",
    "fp-frp-bridge.ts",
    "fp-stream-ops.ts",
    "fp-observable-lite.ts",
    "fp-stream-fusion.ts",
    "fp-usage-integration.ts",
    "fp-registry-init.ts",
    "fluent-usage-wrapper.ts",
    "fp-fromarray.ts",
    "fp-commutative-applicative.ts",
    "fp-closure.ts",
    "fp-yoneda.ts",
    "fp-semiring.ts",
    "fp-nat.ts",
    "fp-algebras-forgetful.ts",
    "fp-cokleisli.ts",
    "fp-cokleisli-cofree.ts",
    "fp-cokleisli-arrow-choice.ts",
    "fp-cofree-choice-uniform.ts",
    "fp-product-matchers.ts",
    "fp-monoids.ts",
    "fp-partial.ts",
    "fp-array-extensions.ts",
    "fp-selective.ts",
    "fp-free.ts",
    "fp-mealy.ts",
    "fp-align.ts",
    "fp-cofree-lazy.ts",
    "fp-free-applicative.ts",
    "fp-either-classes.ts",
    "fp-trampoline.ts",
    "fp-either-ops-table.ts",
    "fp-cofree-lazy-iter.ts",
    "fp-cofree-lazy-para.ts",
    "fp-free-cofree-pairing.ts",
    "fp-cofree-lazy-bfs-build.ts",
    "fp-cofree-comonad.ts",
    "fp-cofree-async.ts",
    "fp-cochoice.ts",
    "fp-match-product.ts",
    "fp-recursion-schemes-extra.ts",
    "fp-option.ts",
    "fp-stream-state.ts",
    "fp-optics-core.ts",
    "fp-optics-traversal.ts",
    "fp-optics-instances.ts",
    "fp-adt-optics.ts",
    "fp-optics-indexed.ts",
    "fp-optics-iso-helpers.ts",
    "fp-optics-everywhere.ts",
    "fp-optics-affine.ts",
    "fp-observable-optics.ts",
    "fp-profunctor-optics.ts",
    "fp-optics-adapter.ts",
    "fp-optics.ts",
    "src/**/*.ts"
  ],
  "exclude": [
    "dist",
    "node_modules",
    
    
    "fp-advanced-dot-composition.ts",
    "fp-arrows-cokleisli-choice.ts",
    "fp-arrows-cokleisli-choice-cofree.ts",
    "fp-auto-derivation-complete.ts",
    "fp-registry-init.ts",
    "fp-variance-derivation.ts",
    "buildPipeline.ts",
    "example-*.ts",
    "fp-advanced-*.ts",
    "fp-advanced-type-system-examples.ts",
    "fp-adjunction*.ts",
    "fp-algebra*.ts",
    "fp-anamorphisms.ts",
    "fp-arrow*.ts",
    "fp-adt-builders-enhanced.ts",
    "fp-adt-builders-with-guards.ts",
    "fp-adt-eq-ord-show-complete.ts",
    "fp-adt-optics*.ts",
    "fp-adt-registry.ts",
    "fp-registry-init.ts",
    "fp-maybe.ts",
    "fp-result.ts",
    "fp-bazaar-*.ts",
    "fp-cooperad*.ts",
    "fp-*-examples.ts",
    "fp-laws*.ts",
    "fp-hylo.ts",
    "fp-pattern-matching-with-guards-complete.ts",
    "fp-persistent-hkt-gadt.ts",
    "fp-unified-adt-definition.ts",
    "fp-bazaar-planner.ts",
    "fp-profunctor-optics.ts",
    "fp-observable-optics.ts",
    "fp-persistent.ts",
    
    "fp-monoids.ts",
    "fp-product-matchers.ts",
    "fp-prouct-matchers.ts",
    "fp-pattern-guards.ts",
    "fp-pattern-matching-ergonomics.ts",
    "fp-readonly-patterns.ts",
    "fp-purity-combinators.ts",
    "fp-purity-pattern-matching.ts",
    "fp-selective.ts",
    "fp-sf-arrowchoice.ts",
    "fp-unified-fluent-api.ts",
    "fp-typeclass-optimization.ts",
    "fp-typeclass-usage-derivation.ts",
    "fp-typeclasses-unified.ts",
    "fp-typeclasses-hok.ts",
    "f-result.ts",
    
    "fp-optics-*.ts",
    "fp-optics*.ts"
  ]
}

